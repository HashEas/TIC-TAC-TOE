{"version":3,"sources":["components/MasterPage/MasterPage.jsx","components/Box/Box.jsx","App.js","reportWebVitals.js","index.js"],"names":["MasterPage","props","class","children","Box","onClick","onClickHandler","index","boxVal","App","useState","activeUser","winner","boxStates","Array","fill","disabled","gameState","setGameState","checkAllValSame","valtoCheck","val1","val2","val3","onClickBoxHandler","prevGameState","boxValArr","checkWinner","gameOver","forEach","element","isGameOver","enabledOrDisableClass","classNameName","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e9b77c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MasterPage = (props) => {\r\n    return (\r\n        <>\r\n            <nav class=\"nav-top p-3\">\r\n                <div class=\"container-fluid d-flex align-items-center pad-0\">\r\n                    <h2 class=\"m-0 letter_space_10x text-uppercase\">TIC-TAC-TOE</h2>\r\n                </div>\r\n            </nav>\r\n            <section class=\"text-center home_page_section text-white pt-5\">\r\n                <div class=\"container justify-content-center\">\r\n                    <div class=\"row align-items-center justify-content-center\">\r\n                        <div class=\"col-12 col-md-6\">\r\n                            {props.children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\nexport default MasterPage;","import React from 'react';\r\n\r\nconst Box = (props) => {\r\n\r\n    const disabledAfterFilled = () => (props.boxVal !== \"\") ?  \"card_modified font-big disabled\" : \"card_modified font-big\";\r\n\r\n    return (\r\n        <div onClick={() => props.onClickHandler(props.index)} class={disabledAfterFilled()}>\r\n            <div class=\"card-body min-height-width\">\r\n            {props.boxVal}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Box;","import './App.css';\nimport MasterPage from './components/MasterPage/MasterPage';\nimport {useState} from 'react';\nimport Box from './components/Box/Box';\n\nfunction App() {\n\n    const [gameState, setGameState] = useState({\n        activeUser: \"X\",\n        winner: \"\",\n        boxStates: new Array(9).fill(\"\"),\n        disabled: false\n    });\n\n    const checkAllValSame = (valtoCheck, val1, val2, val3) => {\n        return (val1 === valtoCheck && val2 === valtoCheck && val3 === valtoCheck);\n    }\n\n    const isGameOver = (boxValArr) => {\n        let gameOver = true;\n        boxValArr.forEach(element => {\n            if(element === \"\") {\n                gameOver = false;\n                return;\n            }\n        });\n        return gameOver;\n    }\n\n    const checkWinner = (boxValArr) => {\n        let winner = \"\";\n\n        // condition check for X\n        if(checkAllValSame(\"X\", boxValArr[0], boxValArr[1], boxValArr[2])) winner = \"X\";\n        if(checkAllValSame(\"X\", boxValArr[3], boxValArr[4], boxValArr[5])) winner = \"X\";\n        if(checkAllValSame(\"X\", boxValArr[6], boxValArr[7], boxValArr[8])) winner = \"X\";\n\n        if(checkAllValSame(\"X\", boxValArr[0], boxValArr[3], boxValArr[6])) winner = \"X\";\n        if(checkAllValSame(\"X\", boxValArr[1], boxValArr[4], boxValArr[7])) winner = \"X\";\n        if(checkAllValSame(\"X\", boxValArr[2], boxValArr[5], boxValArr[8])) winner = \"X\";\n\n        if(checkAllValSame(\"X\", boxValArr[0], boxValArr[4], boxValArr[8])) winner = \"X\";\n        if(checkAllValSame(\"X\", boxValArr[2], boxValArr[4], boxValArr[6])) winner = \"X\";\n        \n        // condition check for O\n        if(checkAllValSame(\"O\", boxValArr[0], boxValArr[1], boxValArr[2])) winner = \"O\";\n        if(checkAllValSame(\"O\", boxValArr[3], boxValArr[4], boxValArr[5])) winner = \"O\";\n        if(checkAllValSame(\"O\", boxValArr[6], boxValArr[7], boxValArr[8])) winner = \"O\";\n\n        if(checkAllValSame(\"O\", boxValArr[0], boxValArr[3], boxValArr[6])) winner = \"O\";\n        if(checkAllValSame(\"O\", boxValArr[1], boxValArr[4], boxValArr[7])) winner = \"O\";\n        if(checkAllValSame(\"O\", boxValArr[2], boxValArr[5], boxValArr[8])) winner = \"O\";\n\n        if(checkAllValSame(\"O\", boxValArr[0], boxValArr[4], boxValArr[8])) winner = \"O\";\n        if(checkAllValSame(\"O\", boxValArr[2], boxValArr[4], boxValArr[6])) winner = \"O\";\n\n        return winner;\n    }\n\n    const onClickBoxHandler = (index) => {\n        let prevGameState = {...gameState};\n        prevGameState.boxStates[index] = prevGameState.activeUser;\n        prevGameState.activeUser = prevGameState.activeUser === \"X\" ? \"O\" : \"X\";\n        prevGameState.winner = checkWinner(prevGameState.boxStates);\n        prevGameState.disabled = isGameOver(prevGameState.boxStates) || prevGameState.winner !== \"\";\n\n        setGameState({\n            ...prevGameState\n        });\n    }\n\n    const enabledOrDisableClass = () => {\n        return (gameState.disabled) ? \"row disabled\" : \"row\";\n    } \n\n    return (\n        <div classNameName=\"App\">\n            <MasterPage>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-xl-6 p-2 border-10\">\n                            <div className=\"border-bottom\">Active Player</div>\n                            <div className=\"font-big\">{gameState.activeUser}</div>\n                        </div>\n                        <div className=\"col-12 col-xl-6 p-2 border-10\">\n                            <div className=\"border-bottom\">Winner</div>\n                            <div className=\"font-big\">{gameState.winner}</div>\n                        </div>\n                    </div>\n\n                    <div className={enabledOrDisableClass()}>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[0]} index=\"0\"/>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[1]} index=\"1\"/>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[2]} index=\"2\"/>\n                    </div>\n                    <div className={enabledOrDisableClass()}>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[3]} index=\"3\"/>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[4]} index=\"4\"/>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[5]} index=\"5\"/>\n                    </div>\n                    <div className={enabledOrDisableClass()}>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[6]} index=\"6\"/>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[7]} index=\"7\"/>\n                        <Box onClickHandler={(index)=>onClickBoxHandler(index)} boxVal={gameState.boxStates[8]} index=\"8\"/>\n                    </div>\n            </MasterPage>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}